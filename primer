#!/usr/bin/env sh

# Shell sanity
set -eu

# Root directory of the script
PRIMER_ROOT_DIR=$( cd -P -- "$(dirname -- "$(command -v -- "$0")")" && pwd -P )
# Our library for scripts and dependencies.
PRIMER_LIB_DIR=
for _lib in libexec lib share/primer; do
    [ -z "${PRIMER_LIB_DIR}" ] && [ -d "${PRIMER_ROOT_DIR}/$_lib" ] && PRIMER_LIB_DIR="${PRIMER_ROOT_DIR}/$_lib"
    [ -z "${PRIMER_LIB_DIR}" ] && [ -d "${PRIMER_ROOT_DIR}/../$_lib" ] && PRIMER_LIB_DIR="${PRIMER_ROOT_DIR}/../$_lib"
done
[ -z "$PRIMER_LIB_DIR" ] && echo "Cannot find library directory!" >&2 && exit 1
# Top directory for yu.sh
PRIMER_YUSH_DIR="$PRIMER_LIB_DIR/yu.sh"
! [ -d "$PRIMER_LIB_DIR" ] && echo "Cannot find yu.sh directory!" >&2 && exit 1

# shellcheck disable=SC1090
. "$PRIMER_YUSH_DIR/log.sh"
# shellcheck disable=SC1090
. "$PRIMER_YUSH_DIR/text.sh"


# This is the colon separated path where to find priming steps
PRIMER_PATH=${PRIMER_PATH:-}
[ -z "$PRIMER_PATH" ] && PRIMER_PATH=${PRIMER_LIB_DIR}/steps

# Space separated list of extensions for the steps
PRIMER_EXTS=${PRIMER_EXTS:-".sh"}

# These are a list of space separated steps to perform, the first step found in
# the PRIMER_PATH will be used.
PRIMER_STEPS=${PRIMER_STEPS:-}

# Source in all relevant modules. This is where most of the "stuff" will occur.
for module in utils os; do
  module_path="${PRIMER_LIB_DIR}/${module}.sh"
  if [ -f "$module_path" ]; then
    # shellcheck disable=SC1090
    . "$module_path"
  else
    echo "Cannot find module $module at $module_path !" >& 2
    exit 1
  fi
done

_primer_is_var() {
    eval "[ ! -z \${$1:-} ]"
    return $?  # Pedantic.
}

primer_load() {
    _varname=PRIMER_STEP_$(printf %s "$1" | tr '[:lower:]' '[:upper:]' | tr -C '[:alnum:]' '_')_PATH
    if _primer_is_var $_varname; then
        yush_debug "$1 already loaded from \$$_varname"
    else
        _impl=$(primer_locate "$1" || true)
        if [ -n "$_impl" ]; then
            yush_info "Loading $1 implementation from $_impl"
            # shellcheck disable=SC1090
            . "$_impl"
            _varname=PRIMER_STEP_$(printf %s "$1" | tr '[:lower:]' '[:upper:]' | tr -C '[:alnum:]' '_')_PATH
            eval "${_varname}=${_impl}"
        fi
    fi
}

# Parse options
while [ $# -gt 0 ]; do
    case "$1" in
        -v | --verbose)
            YUSH_LOG_LEVEL=$2; shift 2;;
        --verbose=*)
            # shellcheck disable=SC2034
            YUSH_LOG_LEVEL="${1#*=}"; shift 1;;

        -s | --steps)
            PRIMER_STEPS=$2; shift 2;;
        --steps=*)
            PRIMER_STEPS="${1#*=}"; shift 1;;

        -p | --path)
            PRIMER_PATH=$2; shift 2;;
        --path=*)
            PRIMER_PATH="${1#*=}"; shift 1;;

        --*:*)
            _val=${1#*=}
            _key=${1%=*}
            if [ "$_key" = "$_val" ]; then
                _opt=${1#*:}
                _tmp=${1%:*}
                _step=${_tmp##*-}
                yush_info "Passing option $_opt to $_step"
                if primer_load "$_step"; then
                    $_step option "$_opt" "$2"
                fi
                shift 2
            else
                _opt=${_key#*:}
                _tmp=${_key%:*}
                _step=${_tmp##*-}
                yush_info "Passing option $_opt to $_step"
                if primer_load "$_step"; then
                    $_step option "$_opt" "$_val"
                fi
                shift 1
            fi
            ;;

        -h | --help)
            usage 0;;
        --)
            shift; break;;
        -*)
            echo "Unknown option: $1 !" >&2 ; usage 1;;
        *)
            break;;
    esac
done

primer_sudo

if [ "$#" -gt 0 ]; then
    cmd=$1
    shift
else
    cmd=install
fi

case "$(printf %s\\n "$cmd" | tr '[:upper:]' '[:lower:]')" in
    install | up)
        for _step in $PRIMER_STEPS; do
            echo "$_step"
            if primer_load "$_step"; then
                yush_notice "Installing $_step"
                $_step install
            fi
        done
        ;;
    clean | remove | down)
        for _step in $PRIMER_STEPS; do
            if primer_load "$_step"; then
                yush_notice "Cleaning $_step"
                $_step clean
            fi
        done
        ;;
esac